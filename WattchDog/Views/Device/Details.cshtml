@using WattchDog.Models;
@model  WattchDog.Models.DeviceDataViewModel

<h2>
    @if (Model.Device.Status)
    {
        <span class="glyphicon glyphicon-ok-circle" style="color:#5cb85c"></span>
    }
    else
    {
        <span class="glyphicon glyphicon-remove-circle" style="color:#d9534f"></span>
    }
    @(Model.Device.Name ?? "{ Unnamed }") - Measured Data
</h2>

<div class="container">
    <div class="row">
        <div class="col-md-3">
            <div class="row">@Html.ActionLink("Real Power", "Details", new { macaddress = Model.Device.MacAddress, type = DataType.RealPower }, new { @class = "btn btn-default" })</div>
            <div class="row">@Html.ActionLink("Energy Usage", "Details", new { macaddress = Model.Device.MacAddress, type = DataType.EnergyUsage }, new { @class = "btn btn-default" })</div>
            <div class="row">@Html.ActionLink("Power Factor", "Details", new { macaddress = Model.Device.MacAddress, type = DataType.PowerFactor }, new { @class = "btn btn-default" })</div>
            <div class="row">@Html.ActionLink("Rms Voltage", "Details", new { macaddress = Model.Device.MacAddress, type = DataType.Vrms }, new { @class = "btn btn-default" })</div>
            <div class="row">@Html.ActionLink("Rms Current", "Details", new { macaddress = Model.Device.MacAddress, type = DataType.Irms }, new { @class = "btn btn-default" })</div>
        </div>
        <div class="col-md-9">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            @switch (Model.Type)
                            {
                                case DataType.EnergyUsage:
                                    <td>Energy Usage</td>
                                    break;
                                case DataType.Irms:
                                    <td>Rms Current</td>
                                    break;
                                case DataType.PowerFactor:
                                    <td>Power Factor</td>
                                    break;
                                case DataType.RealPower:
                                    <td>Real Power</td>
                                    break;
                                default:
                                    <td>Rms Voltage</td>
                                    break;
                            }
                            <td>Date Recorded</td>
                        </tr>
                    </thead>
                    <tbody id="tablecontent">
                        @foreach (var datapoint in Model.Data)
                        {
                            <tr>
                                <td>@datapoint.Value</td>
                                <td>@datapoint.Time.ToString("hh:mm:ss tt dd/MMM/yyyy")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.3.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var deviceInfo = $.connection.deviceHub;
            // Create a function that the hub can call back to display messages.
            deviceInfo.client.addMeasurements = function (realpower, energyusage, powerfactor, vrms, irms, date) {
                var rowCount = $('#tablecontent tr').length;

                if (rowCount == 10) {
                    $('#tablecontent tr:last').remove();
                }

                @switch (Model.Type)
                {
                    case DataType.EnergyUsage:
                        @:$('#tablecontent').prepend('<tr><td>' + energyusage + '</td><td>' + date + '</td></tr>');
                        break;
                    case DataType.Irms:
                        @:$('#tablecontent').prepend('<tr><td>' + irms + '</td><td>' + date + '</td></tr>');
                        break;
                    case DataType.PowerFactor:
                        @:$('#tablecontent').prepend('<tr><td>' + powerfactor + '</td><td>' + date + '</td></tr>');
                        break;
                    case DataType.RealPower:
                        @:$('#tablecontent').prepend('<tr><td>' + realpower + '</td><td>' + date + '</td></tr>');
                        break;
                    default:
                        @:$('#tablecontent').prepend('<tr><td>' + vrms + '</td><td>' + date + '</td></tr>');
                        break;
                }
            };

            // Start the connection.
            $.connection.hub.start().done(function () {
                deviceInfo.server.connect('@Model.Device.MacAddress');
            });
        });
    </script>
}